version: '3.8'

services:
  volleybot:
    image: andreykir/volleybot:1.0
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      # Database connection
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: volley_game_central
      # Telegram configuration
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      TELEGRAM_GROUP_ID: ${TELEGRAM_GROUP_ID}
      MINI_APP_URL: ${MINI_APP_URL}
      # Application settings
      NODE_ENV: production
    ports:
      - "80:80"  # Map container's port 80 to host port 80
    networks:
      - app-network

  postgres:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: volley_game_central
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network
    # Not exposing PostgreSQL port to the outside world for security
    # Only services in the same network can access it

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
